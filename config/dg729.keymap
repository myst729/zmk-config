#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse_settings.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include "includes/mouse_keys.dtsi"

/ {
  macros {
    bt_sel_0: bt_profile_macro_0 {
      label = "BT_SEL_0";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&out OUT_BLE>, <&bt BT_SEL 0>;
    };

    bt_sel_1: bt_profile_macro_1 {
      label = "BT_SEL_1";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&out OUT_BLE>, <&bt BT_SEL 1>;
    };

    bt_sel_2: bt_profile_macro_2 {
      label = "BT_SEL_2";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&out OUT_BLE>, <&bt BT_SEL 2>;
    };
  };

  behaviors {
    volume_encoder: volume_encoder {
      label = "VOLUME_ENCODER";
      compatible = "zmk,behavior-sensor-rotate";
      #sensor-binding-cells = <0>;
      bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
    };

    brightness_encoder: brightness_encoder {
      label = "BRIGHTNESS_ENCODER";
      compatible = "zmk,behavior-sensor-rotate";
      #sensor-binding-cells = <0>;
      bindings = <&kp C_BRI_UP>, <&kp C_BRI_DN>;
    };

    scroll_encoder: scroll_encoder {
      label = "SCROLL_ENCODER";
      compatible = "zmk,behavior-sensor-rotate";
      #sensor-binding-cells = <0>;
      bindings = <&mwh SCROLL_UP>, <&mwh SCROLL_DOWN>;
      tap-ms = <50>;
    };

    rgb_encoder: rgb_encoder {
      label = "RGB_ENCODER";
      compatible = "zmk,behavior-sensor-rotate";
      #sensor-binding-cells = <0>;
      bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };
  };

  keymap0: keymap {
    compatible = "zmk,keymap";

    letters_layer {
      bindings = <
        &kp ESC     &kp Q     &kp W     &kp E  &kp R      &kp T  &kp Y  &kp U   &kp I      &kp O     &kp P      &kp BACKSPACE
        &kp TAB     &kp A     &kp S     &kp D  &kp F      &kp G  &kp H  &kp J   &kp K      &kp L     &kp SEMI   &mo 2          &kp ENTER
        &kp LSHIFT  &kp Z     &kp X     &kp C  &kp V      &kp B  &kp N  &kp M   &kp COMMA  &kp DOT   &kp SLASH  &kp UP
        &kp LCTRL   &kp LGUI  &kp LALT         &kp SPACE  &mo 1         &tog 3             &kp LEFT  &kp DOWN   &kp RIGHT
      >;
      sensor-bindings = <&volume_encoder>;
    };

    symbols_layer {
      bindings = <
        &kp GRAVE  &kp N1      &kp N2    &kp N3     &kp N4     &kp N5     &kp N6    &kp N7    &kp N8    &kp N9     &kp N0            &kp BACKSLASH
        &kp CAPS   &kp INSERT  &kp HOME  &kp PG_UP  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp SEMI  &kp SQT    &mwh SCROLL_UP    &trans         &trans
        &trans     &kp DELETE  &kp END   &kp PG_DN  &trans     &trans     &trans    &trans    &trans    &trans     &mwh SCROLL_DOWN  &trans
        &trans     &trans      &trans               &trans     &trans               &trans              &mkp LCLK  &mkp MCLK         &mkp RCLK
      >;
      sensor-bindings = <&brightness_encoder>;
    };

    functions_layer {
      bindings = <
        &kp F1  &kp F2     &kp F3     &kp F4           &kp F5  &kp F6  &kp F7      &kp F8        &kp F9        &kp F10    &kp F11           &kp F12
        &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK        &trans  &trans  &trans      &kp C_BRI_DN  &kp C_BRI_UP  &trans     &mwh SCROLL_UP    &trans     &trans
        &trans  &kp PSCRN  &kp SLCK   &kp PAUSE_BREAK  &trans  &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans     &mwh SCROLL_DOWN  &trans
        &trans  &trans     &trans                      &trans  &trans              &trans                      &mkp LCLK  &mkp MCLK         &mkp RCLK
      >;
      sensor-bindings = <&scroll_encoder>;
    };

    settings_layer {
      bindings = <
        &none  U_MSS_TP_PT_I  U_MSS_TP_S_I  U_MSS_TP_NI_I  U_MSS_TP_V6_I  &none   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG
        &none  U_MSS_TP_PT_D  U_MSS_TP_S_D  U_MSS_TP_NI_D  U_MSS_TP_V6_D  &none   &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans           &bt BT_CLR
        &none  &none          &none         &none          &none          &none   &none            &none            &none            &out OUT_BLE     &out OUT_USB     &none
        &none  &none          &none                        &none          &trans                   &trans                            &bt_sel_0        &bt_sel_1        &bt_sel_2
      >;
      sensor-bindings = <&rgb_encoder>;
    };
  };
};
